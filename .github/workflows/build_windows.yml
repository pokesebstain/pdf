name: Build Windows Executable

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Create run script
      run: |
        echo @echo off > run_app.bat
        echo set STREAMLIT_SERVER_PORT=8501 >> run_app.bat
        echo streamlit run app.py >> run_app.bat
        
    - name: Create run script
      run: |
        # Create clean batch file without quotes
        echo @echo off > run_app.bat
        echo set STREAMLIT_SERVER_PORT=8501 >> run_app.bat
        echo start "" "dist\app.exe" >> run_app.bat
        
    - name: Build package
      run: |
        pip install pyinstaller
        # Build with console window for debugging
        pyinstaller --onefile --add-data "app.py;." --add-data "requirements.txt;." --log-level DEBUG app.py
        
        # Verify build artifacts
        echo "=== Build Contents ==="
        ls -R dist/
        
        # Copy all necessary files
        cp run_app.bat dist/
        cp requirements.txt dist/
        cp app.py dist/
        
    - name: Verify build
      run: |
        # Check for required files
        if [ ! -f "dist/app.exe" ]; then
          echo "::error::Missing app.exe!"
          exit 1
        fi
        if [ ! -f "dist/run_app.bat" ]; then
          echo "::error::Missing run_app.bat!"
          exit 1
        fi
        
        # Test batch file syntax
        cat dist/run_app.bat
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: pdf-web-app
        path: |
          dist/run_app.exe
          requirements.txt
